@model TSPPproject.Models.Volunteer

@{
    ViewBag.Title = "Edit";
}

<h2>Редагування</h2>





@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Редагування Інформація про волонтера</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id_Volunteer)

        <div class="form-group">
            @Html.LabelFor(model => model.Name, "Назва", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, "Опис", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Id_Location, "Де розатшовані?", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("Id_Location", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Id_Location, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Id_Location, "Чим Допомагаєте", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-offset-2 col-md-10">
                <table>
                    <tr>
                    @{
                        int cnt = 0;
                        List<TSPPproject.Models.ViewModels.AssignedHelpData> helps = ViewBag.What_helps;


                        foreach (var help in helps)
                        {

                            if (cnt++%3 == 0)
                            {
                                @:</tr><tr>
                            }
                            @:<td>
                            <input type="checkbox"
                                   name="selectedCourses"
                                   value="@help.Id_What_helps"
                                   @(Html.Raw(help.Assigned ? "checked=\"checked\"" : ""))/>
                            @: @help.Name
                            @:</td>
                        }
                        @:</tr>
                    }
                </table>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Phone, "Телефон", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Address, "Адреса", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Повернутись на попередню сторінку", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
